---
import { INITIATOR_SELECTORS } from "@/features/connection/model";
import { Button } from "@/shared/ui/button";
import { Input } from "@/shared/ui/input";
import { Textarea } from "@shared/ui/textarea";
---

<div class="max-w-2xl w-full mx-auto border rounded-lg shadow-lg p-6">
  <h1 class="text-2xl font-bold mb-6">WebRTC Chat</h1>

  <div class="space-y-6">
    <div class="rounded-md">
      <p id="status" class="text-sm text-gray-600"></p>
    </div>

    <!-- Role Selection -->
    <div id="roleSelectionSection" class="grid grid-cols-2 gap-4 mb-6">
      <Button id="createBtn">Create Chat</Button>
      <Button id="joinBtn">Join Chat</Button>
    </div>

    <!-- Creator Section -->
    <div id="creatorSection" class="space-y-4 hidden">
      <Button id={INITIATOR_SELECTORS.CREATE_OFFER_BTN}>Create Offer</Button>
      <div class="space-y-2">
        <label class="text-sm text-gray-600">Your Offer (Share this):</label>
        <Textarea id="offerOutput" rows={4} readOnly />
      </div>
      <div class="space-y-2">
        <label class="text-sm text-gray-600">Paste Answer Here:</label>
        <Textarea
          id="answerInput"
          rows={4}
          placeholder="Paste the answer you received here"
        />
        <Button id="connectBtn">Connect</Button>
      </div>
    </div>

    <!-- Joiner Section -->
    <div id="joinerSection" class="space-y-4 hidden">
      <div class="space-y-2">
        <label class="text-sm text-gray-600">Paste Offer Here:</label>
        <Textarea
          id="offerInput"
          rows={4}
          placeholder="Paste the offer you received here"
          className="w-full"
        />
      </div>
      <Button id="joinChatBtn">Join Chat</Button>
      <div class="space-y-2">
        <label class="text-sm text-gray-600">Your Answer (Share this):</label>
        <Textarea id="answerOutput" rows={4} readOnly />
      </div>
    </div>

    <!-- Chat and Video Section -->
    <div id="chatAndVideoSection" class="space-y-4 hidden">
      <!-- Video Player -->
      <div class="space-y-2">
        <video
          id="sharedVideo"
          class="w-full rounded-lg"
          controls
          preload="auto"></video>
      </div>

      <!-- Chat Section -->
      <form id="chatSection" class="space-y-4">
        <div class="flex gap-2">
          <Input
            id="messageInput"
            type="text"
            placeholder="Type your message..."
          />
          <Button type="submit" id="sendBtn">Send</Button>
        </div>
        <div class="h-64 overflow-y-auto p-4 border rounded-lg">
          <div id="message-list" class="space-y-2"></div>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  import { ChatManager } from "@/features/chat/lib";
  import { initializePeerConnection } from "../../connection/lib/initializePeerConnection";
  import { InitiatorManager } from "@/features/connection/lib/initiator";
  import { JoinerManager } from "@/features/connection/lib/joiner";
  import { VideoSyncManager } from "@/features/video/lib/VideoSyncManager";

  document.addEventListener("DOMContentLoaded", () => {
    const { pc, chatChannel, videoChannel } = initializePeerConnection();

    const chatManager = new ChatManager(chatChannel);
    chatManager.setupDataChannel();
    chatManager.setupListeners();

    // Initialize video sync
    const videoElement = document.getElementById(
      "sharedVideo"
    ) as HTMLVideoElement;
    const videoSyncManager = new VideoSyncManager(videoElement, videoChannel);
    videoSyncManager.setupListeners("./fedor.mp4");

    // Role buttons
    const roleSelectSection = document.getElementById("roleSelectionSection")!;
    const createBtn = document.getElementById("createBtn")!;
    const joinBtn = document.getElementById("joinBtn")!;

    // Role sections
    const creatorSection = document.getElementById("creatorSection")!;
    const joinerSection = document.getElementById("joinerSection")!;
    const chatAndVideoSection = document.getElementById("chatAndVideoSection")!;

    // Role selection
    createBtn.addEventListener("click", () => {
      creatorSection.classList.remove("hidden");
      joinerSection.classList.add("hidden");
      roleSelectSection.classList.add("hidden");

      const initiatorManager = new InitiatorManager(pc);
      initiatorManager.setupListeners();
    });

    joinBtn.addEventListener("click", () => {
      joinerSection.classList.remove("hidden");
      creatorSection.classList.add("hidden");
      roleSelectSection.classList.add("hidden");

      const joinerManager = new JoinerManager(pc);
      joinerManager.setupListeners();
    });

    // pc.onconnectionstatechange = (e) => {
    //   alert(pc.connectionState);
    // };

    videoChannel.onopen = () => {
      chatAndVideoSection.classList.remove("hidden");
      creatorSection.classList.add("hidden");
      joinerSection.classList.add("hidden");
    };
  });
</script>
